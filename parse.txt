Rule(PROGRAM -> program VAR_DEFINITIONS; STATEMENTS end FUNC_DEFINITIONS)
Expected: one of tokens 'KEYWORD_REAL or KEYWORD_INTEGER or SEMICOLON or RIGHT_BRACKET3' at line: 3, Actual token: 'IDENTIFIER', lexeme: 'int'
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> integer)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> VARIABLE_TEMP = EXPRESSION)
Rule(VARIABLE_TEMP -> ε)
Rule(EXPRESSION -> int_number)
Rule(STATEMENTS_TEMP -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> real)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> VARIABLE_TEMP = EXPRESSION)
Rule(VARIABLE_TEMP -> [int_number])
Rule(EXPRESSION -> id EXPRESSION_TEMP)
Rule(EXPRESSION_TEMP -> ar_op EXPRESSION)
Rule(EXPRESSION -> id EXPRESSION_TEMP)
Rule(EXPRESSION_TEMP -> ar_op EXPRESSION)
Expected: one of tokens 'INT_NUMBER or REAL_NUMBER or IDENTIFIER' at line: 11, Actual token: 'OP_MUL', lexeme: '*'
Rule(STATEMENTS_TEMP -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> real)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Expected: one of tokens 'COMMA or SEMICOLON or RIGHT_BRACKET3' at line: 15, Actual token: 'OP_EQUAL', lexeme: '='
Rule(VAR_DEFINITIONS_TEMP -> ε)
Expected: one of tokens 'KEYWORD_END or RIGHT_BRACKET2 or IDENTIFIER or LEFT_BRACKET2 or KEYWORD_RETURN' at line: 16, Actual token: 'RIGHT_BRACKET2', lexeme: '}'
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> real)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Expected: token 'RIGHT_BRACKET1' at line: 19, Actual token: 'RIGHT_BRACKET3', lexeme: ')'
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> return STATEMENT_TEMP)
Rule(STATEMENT_TEMP -> EXPRESSION)
Rule(EXPRESSION -> id EXPRESSION_TEMP)
Rule(EXPRESSION_TEMP -> VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Rule(STATEMENTS_TEMP -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Expected: one of tokens 'KEYWORD_REAL or KEYWORD_INTEGER or SEMICOLON or RIGHT_BRACKET3' at line: 24, Actual token: 'IDENTIFIER', lexeme: 'double'
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> VARIABLE_TEMP = EXPRESSION)
Rule(VARIABLE_TEMP -> ε)
Rule(EXPRESSION -> int_number)
Rule(STATEMENTS_TEMP -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> integer)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Expected: token 'INT_NUMBER' at line: 29, Actual token: 'REAL_NUMBER', lexeme: '2.56'
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> VARIABLE_TEMP = EXPRESSION)
Rule(VARIABLE_TEMP -> [int_number])
Rule(EXPRESSION -> real_number)
Rule(STATEMENTS_TEMP -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> integer)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> return STATEMENT_TEMP)
Expected: one of tokens 'INT_NUMBER or IDENTIFIER or REAL_NUMBER or SEMICOLON' at line: 35, Actual token: 'LEFT_BRACKET3', lexeme: '('
Rule(STATEMENTS_TEMP -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> integer)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Expected: one of tokens 'LEFT_BRACKET3 or OP_EQUAL or LEFT_BRACKET1' at line: 41, Actual token: 'SEMICOLON', lexeme: ';'
Rule(STATEMENTS_TEMP -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> integer)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> (PARAMETERS_LIST))
Rule(PARAMETERS_LIST -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> (PARAMETERS_LIST))
Rule(PARAMETERS_LIST -> VARIABLES_LIST)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Expected: token 'RIGHT_BRACKET3' at line: 47, Actual token: 'SEMICOLON', lexeme: ';'
Expected: token 'SEMICOLON' at line: 47, Actual token: 'IDENTIFIER', lexeme: 'Arr_name'
Expected: one of tokens 'KEYWORD_RETURN or IDENTIFIER or LEFT_BRACKET2 or KEYWORD_END or RIGHT_BRACKET2' at line: 47, Actual token: 'LEFT_BRACKET1', lexeme: '['
Rule(STATEMENTS_TEMP -> ε)
Rule(FUNC_DEFINITIONS -> FUNC_DEFINITION FUNC_DEFINITIONS_TEMP)
Rule(FUNC_DEFINITION -> RETURNED_TYPE id (PARAM_DEFINITIONS) BLOCK)
Rule(RETURNED_TYPE -> void)
Rule(PARAM_DEFINITIONS -> ε)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> integer)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ;VAR_DEFINITIONS)
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> real)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ;VAR_DEFINITIONS)
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> real)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> return STATEMENT_TEMP)
Rule(STATEMENT_TEMP -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> VARIABLE_TEMP = EXPRESSION)
Rule(VARIABLE_TEMP -> [int_number])
Expected: token 'INT_NUMBER' at line: 57, Actual token: 'IDENTIFIER', lexeme: 'tmp'
Expected: token 'RIGHT_BRACKET1' at line: 57, Actual token: 'INT_NUMBER', lexeme: '121314'
Expected: token 'OP_EQUAL' at line: 57, Actual token: 'RIGHT_BRACKET1', lexeme: ']'
Expected: one of tokens 'INT_NUMBER or REAL_NUMBER or IDENTIFIER' at line: 57, Actual token: 'OP_EQUAL', lexeme: '='
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> VARIABLE_TEMP = EXPRESSION)
Rule(VARIABLE_TEMP -> ε)
Rule(EXPRESSION -> real_number)
Rule(STATEMENTS_TEMP -> ε)
Rule(FUNC_DEFINITIONS_TEMP -> FUNC_DEFINITION FUNC_DEFINITIONS_TEMP)
Rule(FUNC_DEFINITION -> RETURNED_TYPE id (PARAM_DEFINITIONS) BLOCK)
Rule(RETURNED_TYPE -> TYPE)
Rule(TYPE -> real)
Rule(PARAM_DEFINITIONS -> ε)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> real)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Expected: one of tokens 'COMMA or SEMICOLON or RIGHT_BRACKET3' at line: 63, Actual token: 'OP_EQUAL', lexeme: '='
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> VARIABLE_TEMP = EXPRESSION)
Rule(VARIABLE_TEMP -> ε)
Rule(EXPRESSION -> real_number)
Rule(STATEMENTS_TEMP -> ε)
Rule(FUNC_DEFINITIONS_TEMP -> FUNC_DEFINITION FUNC_DEFINITIONS_TEMP)
Rule(FUNC_DEFINITION -> RETURNED_TYPE id (PARAM_DEFINITIONS) BLOCK)
Rule(RETURNED_TYPE -> TYPE)
Rule(TYPE -> integer)
Rule(PARAM_DEFINITIONS -> ε)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> real)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Expected: one of tokens 'COMMA or SEMICOLON or RIGHT_BRACKET3' at line: 69, Actual token: 'KEYWORD_INTEGER', lexeme: 'integer'
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> integer)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ;VAR_DEFINITIONS)
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> real)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> return STATEMENT_TEMP)
Rule(STATEMENT_TEMP -> ε)
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> VARIABLE_TEMP = EXPRESSION)
Rule(VARIABLE_TEMP -> [int_number])
Rule(EXPRESSION -> id EXPRESSION_TEMP)
Rule(EXPRESSION_TEMP -> ar_op EXPRESSION)
Rule(EXPRESSION -> id EXPRESSION_TEMP)
Rule(EXPRESSION_TEMP -> ar_op EXPRESSION)
Rule(EXPRESSION -> real_number)
Rule(STATEMENTS_TEMP -> ε)
Rule(STATEMENTS_TEMP -> ε)
Rule(FUNC_DEFINITIONS_TEMP -> FUNC_DEFINITION FUNC_DEFINITIONS_TEMP)
Rule(FUNC_DEFINITION -> RETURNED_TYPE id (PARAM_DEFINITIONS) BLOCK)
Rule(RETURNED_TYPE -> TYPE)
Rule(TYPE -> real)
Rule(PARAM_DEFINITIONS -> VAR_DEFINITIONS)
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> integer)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ,VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> real)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> BLOCK)
Rule(BLOCK -> { VAR_DEFINITIONS; STATEMENTS })
Rule(VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_TEMP)
Rule(VAR_DEFINITION -> TYPE VARIABLES_LIST)
Rule(TYPE -> integer)
Rule(VARIABLES_LIST -> VARIABLE VARIABLES_LIST_TEMP)
Rule(VARIABLE -> id VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> ε)
Rule(VARIABLES_LIST_TEMP -> ε)
Rule(VAR_DEFINITIONS_TEMP -> ε)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Rule(STATEMENT_TWO_TEMP -> VARIABLE_TEMP = EXPRESSION)
Rule(VARIABLE_TEMP -> [int_number])
Rule(EXPRESSION -> id EXPRESSION_TEMP)
Rule(EXPRESSION_TEMP -> VARIABLE_TEMP)
Rule(VARIABLE_TEMP -> [int_number])
Expected: token 'SEMICOLON' at line: 83, Actual token: 'OP_MUL', lexeme: '*'
Rule(STATEMENTS_TEMP -> STATEMENTS)
Rule(STATEMENTS -> STATEMENT; STATEMENTS_TEMP)
Rule(STATEMENT -> id STATEMENT_TWO_TEMP)
Expected: one of tokens 'LEFT_BRACKET3 or OP_EQUAL or LEFT_BRACKET1' at line: 83, Actual token: 'OP_MUL', lexeme: '*'
Rule(STATEMENTS_TEMP -> ε)
Expected: token 'SEMICOLON' at line: 87, Actual token: 'LEFT_BRACKET2', lexeme: '{'
Expected: one of tokens 'KEYWORD_RETURN or IDENTIFIER or LEFT_BRACKET2 or KEYWORD_END or RIGHT_BRACKET2' at line: 88, Actual token: 'KEYWORD_INTEGER', lexeme: 'integer'
Expected: one of tokens 'KEYWORD_INTEGER or KEYWORD_REAL or KEYWORD_VOID or TOKEN_EOF' at line: 92, Actual token: 'SEMICOLON', lexeme: ';'
